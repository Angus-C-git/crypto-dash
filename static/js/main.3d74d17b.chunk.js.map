{"version":3,"sources":["static/arrow-right.svg","components/PieDatagram.js","components/DataCard.js","components/LineDatagram.js","components/DataSpan.js","static/logo.svg","components/NavBar.js","routes/Dashboard.js","routes/Profile.js","routes/Login.js","App.js","js/reportWebVitals.js","index.js"],"names":["renderActiveShape","props","RADIAN","Math","PI","cx","cy","midAngle","innerRadius","outerRadius","startAngle","endAngle","fill","payload","percent","value","sin","cos","sx","sy","mx","my","ex","ey","textAnchor","x","y","dy","fontFamily","name","Sector","d","stroke","r","toFixed","PieDatagram","data","useState","activeIndex","setActiveIndex","onPieEnter","useCallback","_","index","PieChart","width","height","Pie","activeShape","paddingAngle","dataKey","onMouseEnter","useStyles","makeStyles","root","minWidth","backgroundColor","borderRadius","marginLeft","marginRight","fontSize","marginTop","fontWeight","color","breakDownButton","img","padding","cursor","WALLET","gql","POSTURE","DataCard","total","chartData","classes","QUERY","dataType","useQuery","loading","error","console","log","posture","wallet","transaction_history","profit","invest","worth","holdings","Card","className","variant","CardContent","Typography","component","CardTitle","CardActions","Button","size","src","Logo","onClick","alt","window","location","LineDatagram","LineChart","margin","top","right","left","bottom","CartesianGrid","strokeDasharray","XAxis","YAxis","Tooltip","Legend","Line","type","activeDot","title","marginBottom","INVESTMENT_HISTORY","LargeOutlinedCard","investment_history","theme","flexGrow","menuButton","spacing","s_logo","LOGOUT","NavBar","history","useHistory","useMutation","logout","React","redirectToLogin","setRedirectToLogin","handleLogout","e","a","preventDefault","then","res","catch","err","returnHome","push","AppBar","position","Toolbar","id","control","Dashboard","Grid","container","item","xs","justify","Profile","display","justifyContent","alignItems","flexDirection","formFields","verticalAlign","LOGIN","Login","email","setEmail","password","setPassword","undefined","setError","login","redirectToDash","setRedirectToDash","handleLogin","variables","message","to","TextField","label","fullWidth","onChange","target","Alert","severity","client","ApolloClient","uri","cache","InMemoryCache","credentials","App","CookiesProvider","ApolloProvider","exact","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3d74d17b.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/arrow-right.6a2e5d52.svg\";","import React, { useCallback, useState } from \"react\";\nimport { PieChart, Pie, Sector } from 'recharts';\n\n// ::::::::::::::: DATA STRUCTURE :::::::::::::::\n\n// const data = [\n// \t{ name: 'Investment', value: 500.11 },\n// \t{ name: 'Net Worth', value: 800.77 },\n// ];\n//\n// const profData = [\n// \t{ name: 'BTC', value: 399.01 },\n// \t{ name: 'DOGE', value: 32.77 },\n// \t{ name: 'XRP', value: 149.44 },\n// \t{ name: 'THEA', value: 743.19 },\n// \t{ name: 'ETH', value: 563.86 },\n// \t{ name: 'HIVE', value: 45.90 },\n// \t{ name: 'SHIB', value: 24.00 },\n// ];\n\nconst renderActiveShape = (props) => {\n\tconst RADIAN = Math.PI / 180;\n\tconst { cx, cy, midAngle, innerRadius, outerRadius, startAngle, endAngle, fill, payload, percent, value } = props;\n\tconst sin = Math.sin(-RADIAN * midAngle);\n\tconst cos = Math.cos(-RADIAN * midAngle);\n\tconst sx = cx + (outerRadius + 10) * cos;\n\tconst sy = cy + (outerRadius + 10) * sin;\n\tconst mx = cx + (outerRadius + 30) * cos;\n\tconst my = cy + (outerRadius + 30) * sin;\n\tconst ex = mx + (cos >= 0 ? 1 : -1) * 22;\n\tconst ey = my;\n\tconst textAnchor = cos >= 0 ? 'start' : 'end';\n\n\treturn (\n\t\t<g>\n\t\t\t<text x={cx} y={cy} dy={8} textAnchor=\"middle\" fill={fill} fontFamily={\"Roboto\"}>\n\t\t\t\t{payload.name}\n\t\t\t</text>\n\t\t\t<Sector\n\t\t\t\tcx={cx}\n\t\t\t\tcy={cy}\n\t\t\t\tinnerRadius={innerRadius}\n\t\t\t\touterRadius={outerRadius}\n\t\t\t\tstartAngle={startAngle}\n\t\t\t\tendAngle={endAngle}\n\t\t\t\tfill={fill}\n\t\t\t/>\n\t\t\t<Sector\n\t\t\t\tcx={cx}\n\t\t\t\tcy={cy}\n\t\t\t\tstartAngle={startAngle}\n\t\t\t\tendAngle={endAngle}\n\t\t\t\tinnerRadius={outerRadius + 6}\n\t\t\t\touterRadius={outerRadius + 10}\n\t\t\t\tfill={fill}\n\t\t\t/>\n\t\t\t<path d={`M${sx},${sy}L${mx},${my}L${ex},${ey}`} stroke={fill} fill=\"none\" />\n\t\t\t<circle cx={ex} cy={ey} r={2} fill={fill} stroke=\"none\" />\n\t\t\t<text x={ex + (cos >= 0 ? 1 : -1) * 12} y={ey} textAnchor={textAnchor} fill=\"#dee3ea\">{`Total ${value}`}</text>\n\t\t\t<text x={ex + (cos >= 0 ? 1 : -1) * 12} y={ey} dy={18} textAnchor={textAnchor} fill=\"#999\">\n\t\t\t\t{`(Net ${(percent * 100).toFixed(2)}%)`}\n\t\t\t</text>\n\t\t</g>\n\t);\n};\n\nexport default function PieDatagram(props) {\n\tconst { data } = props;\n\tconst [activeIndex, setActiveIndex] = useState(0);\n\tconst onPieEnter = useCallback(\n\t\t(_, index) => {\n\t\t\tsetActiveIndex(index);\n\t\t},\n\t\t[setActiveIndex]\n\t);\n\n\treturn (\n\t\t<PieChart width={465} height={280}>\n\t\t\t<Pie\n\t\t\t\tactiveIndex={activeIndex}\n\t\t\t\tactiveShape={renderActiveShape}\n\t\t\t\tdata={data}\n\t\t\t\tcx={220}\n\t\t\t\tcy={125}\n\t\t\t\tinnerRadius={50}\n\t\t\t\touterRadius={70}\n\t\t\t\tpaddingAngle={5}\n\t\t\t\tfill=\"#fd4d4d\"\n\t\t\t\tdataKey=\"value\"\n\t\t\t\tonMouseEnter={onPieEnter}\n\t\t\t/>\n\t\t</PieChart>\n\t);\n}\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\n\nimport Logo from \"../static/arrow-right.svg\";\nimport PieDatagram from './PieDatagram';\n\n\nimport { useQuery, gql } from '@apollo/client';\n\nconst useStyles = makeStyles({\n\troot: {\n\t\tminWidth: 465,\n\t\tbackgroundColor: '#242c37',\n\t\tborderRadius: 25,\n\t\tmarginLeft: '10%',\n\t\tmarginRight: '10%',\n\t},\n\tdata: {\n\t\tfontSize: 25,\n\t\tmarginTop: '4%',\n\t\t// marginLeft: '2%',\n\t\tfontWeight: 'bold',\n\t\tcolor: '#dee3ea',\n\t},\n\tbreakDownButton: {\n\t\tcolor: '#fd4d4d',\n\t},\n\timg: {\n\t\twidth: '20px',\n\t\theight: '20px',\n\t\tpadding: '5px',\n\t\tcursor: 'pointer',\n\t},\n});\n\n\nconst WALLET = gql`\n    query {\n        wallet {\n            total\n            holdings {\n                name\n                value\n            }\n        }\n    }\n`;\n\nconst POSTURE = gql`\n    query {\n\t\tposture {\n\t\t\tprofit\n\t\t\tinvest\n\t\t\tworth\n\t\t}\n\t} \n`;\n\n\n\nexport default function DataCard(props) {\n\tconst classes = useStyles();\n\tlet total;\n\tlet chartData;\n\n\tlet QUERY = (props.dataType === 'profile') ? WALLET : POSTURE;\n\n\tconst { loading, error, data } = useQuery(QUERY);\n\n\tif (loading) return <p>Loading...</p>;\n\tif (error) {\n\t\tconsole.log(error);\n\t\treturn <p>Error :(</p>;\n\t}\n\n\t// TMP\n\tif (!data.posture && !data.wallet && !data.transaction_history)\n\t\treturn window.location = '/login';\n\n\tif (data && props.dataType !== 'profile') {\n\t\ttotal = data.posture.profit;\n\t\tchartData = [\n\t\t\t{\n\t\t\t\tname: \"Investment\",\n\t\t\t\tvalue: data.posture.invest\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"Worth\",\n\t\t\t\tvalue: data.posture.worth\n\t\t\t}\n\t\t];\n\t} else {\n\t\ttotal = data.wallet.total;\n\t\tchartData = data.wallet.holdings;\n\t}\n\n\treturn (\n\t\t<Card className={classes.root} variant=\"outlined\">\n\t\t\t<CardContent>\n\t\t\t\t<Typography variant=\"h5\" component=\"h2\">\n\t\t\t\t\t{props.CardTitle}\n\t\t\t\t</Typography>\n\n\t\t\t\t<PieDatagram data={chartData}/>\n\n\t\t\t\t<Typography className={classes.data} color=\"textSecondary\">\n\t\t\t\t\t${total}\n\t\t\t\t</Typography>\n\t\t\t</CardContent>\n\t\t\t<CardActions>\n\t\t\t\t<Button className={classes.breakDownButton} size=\"medium\">See Breakdown <img src={Logo} onClick={() => console.log('BREAKDOWN')} className={classes.img} alt=\"arrow\"/></Button>\n\t\t\t</CardActions>\n\t\t</Card>\n\t);\n}","import React from 'react';\nimport { LineChart, Line, XAxis, YAxis, CartesianGrid, Tooltip, Legend } from 'recharts';\n\n\n\nexport default function LineDatagram(props) {\n\n\treturn (\n\t\t<LineChart\n\t\t\twidth={1100}\n\t\t\theight={300}\n\t\t\tdata={props.data}\n\t\t\tmargin={{\n\t\t\t\ttop: 10,\n\t\t\t\tright: 35,\n\t\t\t\tleft: 10,\n\t\t\t\tbottom: 5,\n\t\t\t}}\n\t\t>\n\t\t\t<CartesianGrid strokeDasharray=\"3 3\" />\n\t\t\t<XAxis dataKey=\"month\" />\n\t\t\t<YAxis />\n\t\t\t<Tooltip />\n\t\t\t<Legend />\n\t\t\t<Line type=\"monotone\" dataKey=\"buy\" stroke=\"#8884d8\" activeDot={{ r: 8 }} />\n\t\t\t<Line type=\"monotone\" dataKey=\"sell\" stroke=\"#82ca9d\" />\n\t\t</LineChart>\n\t);\n}\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport Typography from '@material-ui/core/Typography';\nimport LineDatagram from \"../components/LineDatagram\";\nimport { useQuery, gql } from '@apollo/client';\n\n\nconst useStyles = makeStyles({\n\troot: {\n\t\tminWidth: 1200,\n\t\twidth: '85%',\n\t\t//maxWidth: 1600,\n\t\tbackgroundColor: '#242c37',\n\t\tborderRadius: 25,\n\t\tmarginLeft: '15%',\n\t\tmarginRight: '15%',\n\t},\n\ttitle: {\n\t\tmarginBottom: '2%',\n\t},\n\tbreakDownButton: {\n\t\tcolor: '#fd4d4d',\n\t},\n});\n\n\nconst INVESTMENT_HISTORY = gql`\n    query {\n        investment_history {\n            month\n            buy\n            sell\n        }\n    }\n`;\n\n\nexport default function LargeOutlinedCard(props) {\n\tconst { CardTitle } = props;\n\tconst classes = useStyles();\n\tlet chartData;\n\n\tconst { loading, error, data } = useQuery(INVESTMENT_HISTORY);\n\n\tif (loading) return <p>Loading...</p>;\n\tif (error || !data) {\n\t\tconsole.log(error);\n\t\tchartData = null;\n\t}\n\n\n\tif (data) {\n\t\tchartData = data.investment_history;\n\t}\n\n\treturn (\n\t\t<Card className={classes.root} variant=\"outlined\">\n\t\t\t<CardContent>\n\t\t\t\t<Typography variant=\"h5\" component=\"h2\" className={classes.title}>\n\t\t\t\t\t{CardTitle}\n\t\t\t\t</Typography>\n\t\t\t\t<LineDatagram data={chartData}/>\n\t\t\t</CardContent>\n\t\t</Card>\n\t);\n}","export default __webpack_public_path__ + \"static/media/logo.c10ba86a.svg\";","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Logo from '../static/logo.svg';\n\nimport { useHistory } from 'react-router-dom';\nimport {gql, useMutation} from \"@apollo/client\";\n\nconst useStyles = makeStyles((theme) => ({\n\troot: {\n\t\tflexGrow: 1,\n\t\twidth: '100%',\n\t\tbackgroundColor: '#151a21',\n\t\t'& Button': {\n\t\t\tcolor: '#fd4d4d',\n\t\t}\n\t},\n\tmenuButton: {\n\t\tmarginRight: theme.spacing(2),\n\t},\n\ttitle: {\n\t\tflexGrow: 1,\n\t\tcursor: 'pointer',\n\t},\n\ts_logo: {\n\t\twidth: '15px',\n\t\theight: '75px',\n\t},\n\timg: {\n\t\twidth: '45px',\n\t\theight: '45px',\n\t\tpadding: '10px',\n\t\tcursor: 'pointer',\n\t\tcolor: '#dee3ea',\n\t},\n}));\n\n\nconst LOGOUT = gql`\n    mutation mutation {\n        logout\n    }\n`;\n\n\nexport default function NavBar(props) {\n\t// let { token } = props;\n\tconst classes = useStyles();\n\tconst history = useHistory();\n\tconst [ logout ] = useMutation(LOGOUT);\n\n\tconst [\n\t\tredirectToLogin,\n\t\tsetRedirectToLogin\n\t] = React.useState(false);\n\n\n\t/**\n\t * TMP logout method deletes local storage\n\t * token.\n\t * */\n\tconst handleLogout = async (e) => {\n\t\te.preventDefault();\n\t\ttry {\n\t\t\tawait logout().then((res) => {\n\t\t\t\tif (res.data.logout)\n\t\t\t\t\tsetRedirectToLogin(true);\n\t\t\t}).catch(err => {\n\t\t\t\tconsole.error(err);\n\t\t\t});\n\t\t} catch (err) {\n\t\t\tconsole.error('[>>] Logout failed', err);\n\t\t}\n\n\t};\n\n\tconst returnHome = () => {\n\t\thistory.push('/dashboard');\n\t};\n\n\tconst profile = () => {\n\t\t//history.push('/profile');\n\t\twindow.location = '/profile';\n\t};\n\n\tif (redirectToLogin)\n\t\twindow.location = '/login';\n\t\t//return <Redirect to='/login' />;\n\n\treturn (\n\t\t<div className={classes.root}>\n\t\t\t<AppBar alt=\"Navigation bar\" className={classes.root} position=\"static\">\n\t\t\t\t<Toolbar>\n\t\t\t\t\t<img src={Logo} onClick={() => returnHome()} className={classes.img} alt=\"logo\"/>\n\t\t\t\t\t<Typography alt=\"CryptoDash\" onClick={() => returnHome()} variant=\"h6\" className={classes.title}>\n\t\t\t\t\t\tCryptoDash\n\t\t\t\t\t</Typography>\n\t\t\t\t\t<Button alt=\"profile\" id=\"profile\" onClick={profile} color=\"inherit\">Profile</Button>\n\t\t\t\t\t<Button alt=\"Logout\" id=\"logout\" onClick={handleLogout} color=\"inherit\">Logout</Button>\n\t\t\t\t</Toolbar>\n\t\t\t</AppBar>\n\t\t</div>\n\t);\n}\n\nNavBar.propTypes = {\n\t// token: PropTypes.string.isRequired,\n};\n","import React from 'react';\nimport { BrowserRouter } from \"react-router-dom\";\nimport Grid from '@material-ui/core/Grid';\nimport DataCard from '../components/DataCard';\nimport DataSpan from '../components/DataSpan';\n\nimport { makeStyles } from '@material-ui/core/styles';\n// import PropTypes from \"prop-types\";\nimport NavBar from \"../components/NavBar\";\n\n\nconst useStyles = makeStyles((theme) => ({\n\troot: {\n\t\tmarginTop: 4,\n\t\tflexGrow: 1,\n\t},\n\tcontrol: {\n\t\tpadding: theme.spacing(3),\n\t},\n}));\n\nexport default function Dashboard(props) {\n\t//const [spacing] = React.useState(10);\n\tconst classes = useStyles();\n\t// const { token } = props;\n\t//\n\t// // Get profile data here ?\n\t//\n\t// if (!token)\n\t// \treturn <Redirect to=\"/login\" />;\n\n\treturn (\n\t\t<BrowserRouter>\n\t\t\t<NavBar />\n\t\t\t<div>\n\t\t\t\t<h2>Holdings Overview</h2>\n\t\t\t</div>\n\n\t\t\t<Grid container className={classes.root} spacing={5}>\n\t\t\t\t<Grid item xs spacing={3}>\n\t\t\t\t\t<Grid container justify=\"center\" >\n\t\t\t\t\t\t<DataCard CardTitle={\"Total Profit\"}/>\n\t\t\t\t\t</Grid>\n\t\t\t\t</Grid>\n\t\t\t\t<Grid item xs spacing={3}>\n\t\t\t\t\t<Grid container justify=\"center\" >\n\t\t\t\t\t\t<DataCard CardTitle={\"Profile\"} dataType={\"profile\"}/>\n\t\t\t\t\t</Grid>\n\t\t\t\t</Grid>\n\t\t\t\t<Grid item xs={12} spacing={3}>\n\t\t\t\t\t<Grid container justify=\"center\">\n\t\t\t\t\t\t<DataSpan CardTitle={\"Buys Vs Sells Overtime\"}/>\n\t\t\t\t\t</Grid>\n\t\t\t\t</Grid>\n\t\t\t</Grid>\n\t\t</BrowserRouter>\n\n\t)\n}\n\nDashboard.propTypes = {\n\t// token: PropTypes.string.isRequired\n};","import React from 'react';\nimport NavBar from \"../components/NavBar\";\n// import logo from \"./static/logo.svg\";\n// import { BrowserRouter as Router, Link } from \"react-router-dom\";\n\nexport default function Profile() {\n\n\treturn (\n\t\t<div>\n\t\t\t<NavBar />\n\t\t\t<h1>Profile</h1>\n\t\t\t<h3>Coming Soon ...</h3>\n\t\t</div>\n\t);\n}\n\nProfile.propTypes = {\n};","import React from 'react';\nimport {Redirect, useHistory} from 'react-router-dom';\nimport { Button, TextField, Typography } from '@material-ui/core';\nimport Alert from '@material-ui/lab/Alert';\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport Logo from '../static/logo.svg';\nimport { gql, useMutation } from '@apollo/client';\n\n\nconst useStyles = makeStyles((theme) => ({\n\troot: {\n\t\tflexGrow: 1,\n\t\twidth: '100%',\n\t\tbackgroundColor: '#151a21',\n\t\tdisplay: 'flex',\n\t\tjustifyContent: 'center',\n\t\talignItems: 'center',\n\t\theight: '100vh',\n\t\tflexDirection: 'column',\n\t\tpadding: '20px',\n\t\t'& Button': {\n\t\t\tmarginTop: '5%',\n\t\t\tbackgroundColor: '#fd4d4d',\n\t\t},\n\t},\n\tformFields: {\n\t\tcolor: '#dee3ea',\n\t\t'& TextField': {\n\t\t\tcolor: '#dee3ea',\n\t\t},\n\t\t'& label': {\n\t\t\tcolor: '#dee3ea',\n\t\t},\n\t\t'& input': {\n\t\t\tcolor: '#dee3ea',\n\t\t}\n\t},\n\ttitle: {\n\t\tmarginTop: '8px',\n\t},\n\timg: {\n\t\twidth: '45px',\n\t\theight: '46px',\n\t\tverticalAlign: 'middle',\n\t},\n}));\n\n\nconst LOGIN = gql`\n    mutation Login($email: String!, $password: String!) {\n        login(email: $email, password: $password){\n            message\n        }\n    }\n`;\n\n\n\n\nexport default function Login(props) {\n\tconst [email, setEmail] = React.useState('');\n\tconst [password, setPassword] = React.useState('');\n\tconst [error, setError] = React.useState(undefined);\n\tconst classes = useStyles();\n\tconst history = useHistory();\n\tconst [ login ] = useMutation(LOGIN);\n\n\tconst [\n\t\tredirectToDash,\n\t\tsetRedirectToDash\n\t] = React.useState(false);\n\n\t// if (cookies.get('name')) {\n\t// \tconsole.log(\"AUTH:\", cookies.get('name'));\n\t// \tconsole.log(\"REDIRECTING TO DASH\");\n\t// \t// history.push('/dashboard');\n\t// \treturn <Redirect to=\"/dashboard\"/>;\n\t// }\n\n\n\n\n\t// Similar to Registration - submits all fields\n\tconst handleLogin = async (e) => {\n\n\n\t\t//console.log(\"TMP LOGIN FUNCTION ISSUING TOKEN ...\");\n\t\t//localStorage.setItem('token', 'TMP_TOKEN');\n\n\t\te.preventDefault();\n\t\ttry {\n\t\t\tif (!email || !password) {\n\t\t\t\tsetError('Text fields cannot be empty!');\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tawait login({variables: {email: email, password: password}}).then((data) => {\n\t\t\t\tconst res = data.data.login[0].message;\n\t\t\t\tconsole.log(\"DATA ::\",res);\n\n\t\t\t\tif (res !== 'success') {\n\t\t\t\t\tsetError(res);\n\t\t\t\t\treturn null;\n\t\t\t\t}\n\n\t\t\t\tsetError(null); // hide any previous errors\n\t\t\t\t// return <Redirect to='/dashboard' />;\n\t\t\t\tsetRedirectToDash(true);\n\n\n\t\t\t}).catch((err) => {\n\t\t\t\tconsole.error('[>>] Login failed', err);\n\t\t\t\tsetError(`Incorrect Credentials :: ${err}`);\n\t\t\t});\n\n\n\t\t\t// const response = await fetch(`${BASE_URL}`, {\n\t\t\t// \t// \tbody: JSON.stringify({\n\t\t\t// \t// \t\temail,\n\t\t\t// \t// \t\tpassword,\n\t\t\t// \t// \t}),\n\t\t\t// \t// \theaders: {\n\t\t\t// \t// \t\t'Content-Type': 'application/json',\n\t\t\t// \t// \t},\n\t\t\t// \t// \tmethod: 'POST',\n\t\t\t// \t// });\n\t\t\t// \t// const responseData = await response.json();\n\t\t\t// \t// setError(responseData.error);\n\t\t\t// \t// if (response.status === 200) {\n\t\t\t// \t// \tsetToken(responseData.token);\n\t\t\t// \t// \tlocalStorage.setItem('token', responseData.token);\n\t\t\t// \t// }\n\t\t\t// }\n\t\t} catch (err) {\n\t\t\tconsole.log(err);\n\t\t}\n\t};\n\n\tif (redirectToDash)\n\t\treturn <Redirect to=\"/dashboard\" />;\n\n\n\n\treturn (\n\t\t<>\n\t\t\t<h1 className={classes.title}>\n\t\t\t\t<img src={Logo} alt={\"Logo\"} className={classes.img}/> CryptoDash\n\t\t\t</h1>\n\t\t\t<div className={classes.root}>\n\t\t\t\t<div className={classes.formFields}>\n\t\t\t\t\t<Typography variant=\"h5\">Log in</Typography>\n\t\t\t\t\t<TextField\n\t\t\t\t\t\tcolor={classes.formFields}\n\t\t\t\t\t\talt=\"email field\"\n\t\t\t\t\t\tlabel=\"Email\"\n\t\t\t\t\t\tid=\"email\"\n\t\t\t\t\t\tfullWidth\n\t\t\t\t\t\tvalue={email}\n\t\t\t\t\t\tonChange={(e) => setEmail(e.target.value)}\n\t\t\t\t\t/>\n\t\t\t\t\t<TextField\n\t\t\t\t\t\tcolor=\"--primary-text\"\n\t\t\t\t\t\talt=\"password field\"\n\t\t\t\t\t\tid=\"password\"\n\t\t\t\t\t\tlabel=\"Password\"\n\t\t\t\t\t\ttype=\"password\"\n\t\t\t\t\t\tfullWidth\n\t\t\t\t\t\tvalue={password}\n\t\t\t\t\t\tonChange={(e) => setPassword(e.target.value)}\n\t\t\t\t\t/>\n\t\t\t\t\t{error && <Alert severity=\"error\">{error}</Alert>}\n\t\t\t\t\t<Button alt=\"login-submit\" onClick={handleLogin} variant=\"contained\" color=\"primary\" fullWidth>Log in</Button>\n\t\t\t\t</div>\n\t\t\t\t<br/>\n\t\t\t\t{/*<div className=\"switch-signing-in\">*/}\n\t\t\t\t{/*\tDon&#39;t have an account?*/}\n\t\t\t\t{/*\t{'    '}*/}\n\t\t\t\t{/*</div>*/}\n\t\t\t\t{/*<div>*/}\n\t\t\t\t{/*\t<Button alt=\"register here\" id=\"register-here\" onClick={() => history.push('/register')} variant=\"outlined\">Register here</Button>*/}\n\t\t\t\t{/*\t<Button alt=\"forgot password\" id=\"forgot-pass\" onClick={() => history.push('/reset')} variant=\"outlined\">Forgot Password</Button>*/}\n\t\t\t\t{/*</div>*/}\n\n\t\t\t</div>\n\t\t</>\n\t);\n}\n\nLogin.propTypes = {\n\t// token: PropTypes.string.isRequired\n\t// setToken: PropTypes.func.isRequired,\n};","import React from 'react';\nimport './css/App.css';\n// import NavBar from './components/NavBar';\nimport Dashboard from './routes/Dashboard';\nimport Profile from './routes/Profile';\nimport Login from './routes/Login';\nimport { Switch, Route, BrowserRouter, Redirect } from \"react-router-dom\";\nimport { ApolloClient, InMemoryCache } from '@apollo/client';\nimport { ApolloProvider } from '@apollo/client/react';\nimport { CookiesProvider } from 'react-cookie';\n\n// TODO: redirect on lack of auth token\nconst client = new ApolloClient({\n    uri: 'https://crypto-dash-api.herokuapp.com/',\n    // uri: 'http://localhost:2048/',\n    cache: new InMemoryCache(),\n    credentials: 'include'\n});\n\nfunction App() {\n\n    return (\n        <CookiesProvider>\n            <ApolloProvider client={client}>\n                <BrowserRouter>\n                    <header>\n                        <title>CryptoDash</title>\n                    </header>\n                    {/*<NavBar />*/}\n                    <Switch>\n                        <Route exact path=\"/\">\n                            <Redirect to=\"/dashboard\" />\n                        </Route>\n                        <Route path=\"/profile\">\n                            <Profile />\n                        </Route>\n                        <Route path=\"/login\">\n                            <Login />\n                        </Route>\n                        <Route path=\"/dashboard\">\n                            <Dashboard />\n                        </Route>\n                    </Switch>\n                </BrowserRouter>\n            </ApolloProvider>\n        </CookiesProvider>\n    );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './css/index.css';\nimport App from './App';\nimport reportWebVitals from './js/reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}